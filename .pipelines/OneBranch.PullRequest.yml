#################################################################################
#                               OneBranch Pipelines                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  LinuxContainerImage: 'onebranch.azurecr.io/linux/ubuntu-2004:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers
  WindowsContainerImage: 'onebranch.azurecr.io/windows/ltsc2019/vse2022:latest'

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    featureFlags:
      EnableCDPxPAT: false
      needExceptionForUbuntuUsage: true # Mariner does not currently support all of our cross-compilation targets
      LinuxHostVersion:
        Network: R1
        Distribution: Ubuntu # Mariner kernel is incompatible with Ubuntu container; causes infinite loop in ASAN https://github.com/actions/runner-images/issues/9524
    globalSdl: # https://aka.ms/obpipelines/sdl
      isNativeCode: true
      tsa:
        enabled: false # Disable TSA to force build breaks
      policheck:
        break: true # always break the build on policheck issues.
      binskim:
        enabled: false # Temporarily disable binskim until we sort out BA2018 errors
      credscanSuppressionsPath: $(Build.SourcesDirectory)/.config/CredScanSuppressions.json

    stages:
    - stage: Set_Version
      jobs:
      - job: set_version
        displayName: Set Version
        pool:
          type: linux
        variables:
          ob_outputDirectory: $(Build.SourcesDirectory)/bin
        steps:
        - task: PythonScript@0
          displayName: 'Set version number'
          name: verStep
          inputs:
            scriptSource: 'filePath'
            scriptPath: scripts/version.py
            arguments: '--devops'
            workingDirectory: $(Build.SourcesDirectory)
        - task: onebranch.pipeline.version@1
          inputs:
            system: 'Custom'
            customVersion: '$(verStep.VER_MAJOR).$(verStep.VER_MINOR).$(verStep.VER_PATCH)-$(Build.BuildId)'

    - stage: Build_Windows
      displayName: Build Windows
      jobs:
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Debug'
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Release'
          libcrux: true
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          arch: 'ARM64'
          config: 'Debug'
          skipTests: true
          additionalArgs: '--no-asm'
          identifier: 'NoAsm'
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          arch: 'ARM64'
          config: 'Release'
          skipTests: true
          additionalArgs: '--no-asm'
          identifier: 'NoAsm'
          libcrux: true
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          arch: 'X86'
          config: 'Debug'
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          arch: 'X86'
          config: 'Release'
          libcrux: true
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Release'
          skipTests: true
          additionalArgs: '--no-asm'
          identifier: 'NoAsm'
      - template: .pipelines/templates/build-windows-cmake.yml@self
        parameters:
          arch: 'X86'
          config: 'Release'
          skipTests: true
          additionalArgs: '--no-asm'
          identifier: 'NoAsm'

    - stage: Build_Linux
      displayName: Build Linux
      jobs:
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Debug'
          cc: 'gcc'
          cxx: 'g++'
          openssl: true
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Sanitize'
          cc: 'gcc'
          cxx: 'g++'
          openssl: true
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Release'
          cc: 'gcc'
          cxx: 'g++'
          openssl: true
          libcrux: true
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Debug'
          cc: 'clang'
          cxx: 'clang++'
          openssl: true
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Sanitize'
          cc: 'clang'
          cxx: 'clang++'
          openssl: true
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Release'
          cc: 'clang'
          cxx: 'clang++'
          openssl: true
          libcrux: true
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Release'
          cc: 'gcc'
          cxx: 'g++'
          skipTests: true
          additionalArgs: '--no-asm'
          openssl: true
          identifier: 'NoAsm'
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Release'
          cc: 'clang'
          cxx: 'clang++'
          skipTests: true
          additionalArgs: '--no-asm'
          openssl: true
          identifier: 'NoAsm'
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'X86'
          config: 'Release'
          cc: 'gcc'
          cxx: 'g++'
          skipTests: true
          additionalArgs: '--no-asm --no-fips'
          identifier: 'NoAsm'
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'X86'
          config: 'Release'
          cc: 'clang'
          cxx: 'clang++'
          skipTests: true
          additionalArgs: '--no-asm --no-fips'
          identifier: 'NoAsm'
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'ARM64'
          config: 'Debug'
          cc: 'clang'
          cxx: 'clang++'
          additionalArgs: '--toolchain=cmake-configs/Toolchain-Clang-ARM64.cmake'
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'ARM64'
          config: 'Release'
          cc: 'clang'
          cxx: 'clang++'
          additionalArgs: '--toolchain=cmake-configs/Toolchain-Clang-ARM64.cmake'
          libcrux: true
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'ARM'
          config: 'Debug'
          cc: 'gcc'
          cxx: 'g++'
          additionalArgs: '--toolchain=cmake-configs/Toolchain-GCC-ARM.cmake'
      - template: .pipelines/templates/build-linux.yml@self
        parameters:
          arch: 'ARM'
          config: 'Release'
          cc: 'gcc'
          cxx: 'g++'
          additionalArgs: '--toolchain=cmake-configs/Toolchain-GCC-ARM.cmake'
          libcrux: true

    - stage: Build_macOS
      displayName: Build macOS
      jobs:
      - template: .pipelines/templates/build-mac.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Debug'
          additionalArgs: '--no-asm'
      - template: .pipelines/templates/build-mac.yml@self
        parameters:
          arch: 'AMD64'
          config: 'Release'
          additionalArgs: '--no-asm'
      - template: .pipelines/templates/build-mac.yml@self
        parameters:
          arch: 'ARM64'
          config: 'Debug'
          additionalArgs: '--no-asm'
          skipTests: true
      - template: .pipelines/templates/build-mac.yml@self
        parameters:
          arch: 'ARM64'
          config: 'Release'
          additionalArgs: '--no-asm'
          skipTests: true
